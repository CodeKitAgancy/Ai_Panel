@page
@model Ai_Panel.Pages.Admin.AiConfig.AddModel
@{
	string title = "افزودن تنظیمات جدید هوش مصنوعی";
	ViewData["Title"] = title;
	// var admin = await AdminHelper.GetAdminLoggedIn(true);
	// var username = admin?.UserName ?? "-";
}
<div class="row justify-content-md-center">
	<div class="col-md-12 col-lg-12 col-12">
		<div class="card shadow">
			<h5 class="card-header">@title</h5>
			<div class="card-body">
				<section class="card-text">
					<div class="row mt-1">
						<div class="col-lg-8 col-md-8 col-12 mb-2">
							<form id="FormInModal" method="Post" enctype="multipart/form-data">
								<input type="hidden" asp-for="AiConfigDto.N" />
								@Html.AntiForgeryToken()
								@if (!string.IsNullOrEmpty(Model.Error))
								{
									<p class="alert alert-danger">Error</p>
								}
								<div asp-validation-summary="ModelOnly" class="text-danger"></div>
								<div class="row">
									<div class="col-lg-3 col-6">
										<label class="">عنوان کانفیگ</label>
										<input class="form-control" type="text" asp-for="AiConfigDto.Title" />
										<span class="text-danger" asp-validation-for="AiConfigDto.Title"></span>
									</div>
									<div class="col-lg-3 col-6">
										<label class="">پلتفرم</label>
										<select class="form-select custom-select" id="AiPlatform" asp-for="AiConfigDto.AiPlatformId" asp-items="ViewBag.AiPlatforms"
										onchange="changeAiPlatforms(); aiChengedAlert();"
										>
											<option disabled selected>لطفا موردی را انتخاب کنید</option>
										</select>
									</div>
									<div class="col-lg-3 col-6">
										<label class="">هوش مصنوعی</label>
										<select class="form-select custom-select" id="AiType" onchange="changeAiModels(); aiChengedAlert();">
											<option disabled selected>لطفا موردی را انتخاب کنید</option>
										</select>
									</div>
									<div class="col-lg-3 col-6">
										<label class="">مدل</label>
										<select class="form-select custom-select" id="AiModelTypes" asp-for="AiConfigDto.AiModelId" onchange="aiChengedAlert();">
											<option disabled selected>لطفا موردی را انتخاب کنید</option>
										</select>
										<span class="text-danger" asp-validation-for="AiConfigDto.AiModelId"></span>
									</div>
									<div class="col-lg-4 col-12 mt-1">
										<label class="">خلاقیت در پاسخگویی : </label>
										<span id="rangeValue2" class="font-weight-bold ms-2">AiConfigDto?.Temperature</span>
										<input type="range" class="form-range" min="0" max="2" step="0.01" id="customRange2" asp-for="AiConfigDto.Temperature">
										<span class="text-danger" asp-validation-for="AiConfigDto.Temperature"></span>
									</div>
									<div class="col-lg-4 col-6 mt-1">
										<label class="">خلاقیت در ساخت جمله : </label>
										<span id="rangeValue3" class="font-weight-bold ms-2">AiConfigDto?.PresencePenalty</span>
										<input type="range" class="form-range" min="-2" max="2" step="0.1" id="customRange3" asp-for="AiConfigDto.PresencePenalty">
										<span class="text-danger" asp-validation-for="AiConfigDto.PresencePenalty"></span>
									</div>
									<div class="col-lg-4 col-6 mt-1">
										<label class="">کنترل تنوع پاسخ بر اساس احتمال : </label>
										<span id="rangeValue4" class="font-weight-bold ms-2">AiConfigDto?.TopP</span>
										<input type="range" class="form-range" min="0" max="1" step="0.01" id="customRange4" asp-for="AiConfigDto.TopP">
										<span class="text-danger" asp-validation-for="AiConfigDto.TopP"></span>
									</div>
									<div class="col-lg-4 col-6 mt-1">
										<label class=""> جلوگیری از تکرار کلمه در جمله : </label>
										<span id="rangeValue1" class="font-weight-bold ms-2">AiConfigDto?.FrequencyPenalty</span>
										<input type="range" class="form-range" min="-2" max="2" step="0.1" id="customRange1" asp-for="AiConfigDto.FrequencyPenalty">
										@* @if(AiConfigDto.FrequencyPenalty != null) *@
										@* { *@
										@* 	Console.WriteLine(AiConfigDto); *@
										@* } *@
										<span class="text-danger" asp-validation-for="AiConfigDto.FrequencyPenalty"></span>
									</div>
									@* <div class="col-lg-3 col-12">
									<label class="">تعداد جواب</label>
									<input class="form-control" type="number" asp-for="@Model.AiConfigDto.N" />
									<span class="text-danger"></span>
									</div> *@
									<div class="col-lg-4 col-6">
										<label class="">بیشترین تعداد کلمات خروجی</label>
										<input asp-for="AiConfigDto.MaxTokens" class="form-control" type="number" max="10000" min="5" />
										<span class="text-danger" asp-validation-for="AiConfigDto.MaxTokens"></span>
									</div>
									<div class="col-lg-4 col-12">
										<label class="">
											توقت پاسخگویی در کلمات خاص
											مانند (جنگ،خدا،)
										</label>
										<textarea asp-for="AiConfigDto.Stop" class="form-control" id="stop" rows="1"></textarea>
										<span class="text-danger" asp-validation-for="AiConfigDto.Stop"></span>
									</div>
								</div>
								<div class="col-lg-12 col-md-12 col-12 mt-1">
									<label class="">پرامپت</label>
									<textarea asp-for="AiConfigDto.Prompt" id="Prompt" class="form-control" rows="4" placeholder="پرامپت را وارد کنید..."></textarea>
									<span class="text-danger" asp-validation-for="AiConfigDto.Prompt"></span>
								</div>
								<div class="col-lg-12 col-md-12 col-12 mt-1">
									<label class="" asp-for="AiConfigDto.FirstMessage">
										پیام آغازین
										<span class="btn btn-outline-primary rounded-circle hintContainer p-0">
											؟
											<div class="hint">
												<p>
													پارامترهای قابل استفاده شامل موارد زیر است که باید حتماً داخل {{ }} قرار گیرد مانند {{Question}}
												</p>
												<ul>
													<li>
														متن سوال :
														<span class="copy-text">{{Question}}</span>
													</li>
													<li>
														متن پاسخ :
														<span class="copy-text">{{Answer}}</span>
													</li>
													<li>
														متن توضیحات اضافی سوال :
														<span class="copy-text">{{Content}}</span>
													</li>
													<li>
														نام کاربری کاربر :
														<span class="copy-text">{{User}}</span>
													</li>
													<li>
														پایه کاربر :
														<span class="copy-text">{{UserGrade}}</span>
													</li>
													<li>
														نام کتاب :
														<span class="copy-text">{{Book}}</span>
													</li>
													<li class="succes">
														نام فصل :
														<span class="copy-text">{{Part}}</span>
													</li>
												</ul>
											</div>
										</span>
									</label>
									<textarea asp-for="AiConfigDto.FirstMessage" id="FirstMessage" class="form-control" rows="4" placeholder="اولین پیام کاربر  را وارد کنید..."></textarea>
									<span class="text-danger" asp-validation-for="AiConfigDto.FirstMessage"></span>
								</div>
								<div class="col-lg-12 col-md-12 col-12 mt-2">
									<div class="d-grid gap-2">
										<button class="btn btn-primary" type="submit">ثبت</button>
									</div>
								</div>
							</form>
						</div>
						<div class="col-lg-4 col-md-4 col-12 box-shadow-1">
							<div class="row">
								<div id="chat-overlay" class="card-title text-center" style="display:none;">
									<div id="chat-overlay-head" class="card-header ui-sortable-handle">
									</div>
									<div id="chat-overlay-body">
									</div>
								</div>
								<div class="col-lg-12 col-6">
									@* <input type="hidden" value="@(Model.LastOrDefault()?.Id ?? 0)" id="LastMsgId" /> *@
									<div class="direct-chat direct-chat-primary mt-3">
										<div class="card-header ui-sortable-handle row">
											<div class="col-1">
												<img src="~/images/supporter.jpg" alt="turtle" />
											</div>
											<h5 class="card-title col-10 pt-2 text-center" id="chat-head">تست هوش مصنوعی</h5>
											<div class="col-1">
												<button class="btn rounded-circle disabled" id="chatBackBtn">
													<i class="fa fa-arrow-left"></i>
												</button>
											</div>
										</div>
										<div class="" style="display: block;">
											<div class="row direct-chat-messages" id="chatbody">
												<div class="direct-chat-msg float-end mb-3">
													<div class="direct-chat-infos clearfix">
														<span class="direct-chat-name float-left">دستیار هوش مصنوعی</span>
													</div>
													<img class="direct-chat-img" src="/images/supporter.jpg" alt=".">
													<div class="direct-chat-text">
														<p>
															سوالات خود را مطرح نمایید
														</p>
													</div>
												</div>
											</div>
										</div>
										<div class="card-footer fix-chatMessage-Bottom-inside">
											<form method="post" id="SendMessageForm">
												<div class="input-group">
													<input type="hidden" id="QuestionId" name="QuestionId">
													<input type="hidden" name="TestDateTimeBegging" value="@DateTime.UtcNow.AddHours(3.5)" id="TestDateTimeBegging">
													<input type="text" id="Message" name="Message" placeholder="سوال خودت رو بپرس ..." class="form-control shadow-none" autocomplete="off" style="height:45px;" disabled>
													<button id="SendMessageBtn" onclick="SendFormDataMessageInPanel('SendMessageForm','/Admin/AiConfig/Add/AskAi')" type="submit" class="btn btn-appblue disabled shadow-none" style="height:45px;">
														<i class="fa fa-send"></i>
													</button>
												</div>
											</form>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</section>
			</div>
		</div>
	</div>
</div>
@section Scripts
{
	<script>
		$('#AiContent').toggle($('#WithAiContent').is(':checked'));
		$('#WithAiContent').on('change', function() {
			const isChecked = $(this).is(':checked');
			$('#AiContent').stop().slideToggle(200);
		});

		var parentsData = @Html.Raw(ViewBag.parentAiModels);
		var childsData = @Html.Raw(ViewBag.childAiModels);

		console.log("parentsData",parentsData)


		var aiType = document.getElementById('AiType');
		var aiModelTypes = document.getElementById('AiModelTypes');
		function changeAiPlatforms() {
			var selectedPlatform = Number($('#AiPlatform').val());
			console.log("selectedPlatform",selectedPlatform)
			const AiModelChildern = parentsData.filter(item => item.PlatformIds.includes(selectedPlatform));
			console.log("AiModelChildern",AiModelChildern)
			let options = aiType.getElementsByTagName('option');
			for (var i = options.length; i--;) {
				aiType.removeChild(options[i]);
			}
			let defaultOption = new Option('لطفا موردی را انتخاب کنید', '0');
			defaultOption.setAttribute("disabled", "true");
			defaultOption.setAttribute("selected", "selected");
			aiType.add(defaultOption, undefined);
			for (const element of AiModelChildern) {
				let newOption = new Option(`${element.Title}`, `${element.Id}`);
				aiType.add(newOption, undefined);
			}
		}
		function changeAiModels() {
			var selectedAi = Number($('#AiType').val());
			const AiModelChildern = childsData.filter(item => item.ParentId === selectedAi);
			let options = aiModelTypes.getElementsByTagName('option');
			for (var i = options.length; i--;) {
				aiModelTypes.removeChild(options[i]);
			}
			let defaultOption = new Option('لطفا موردی را انتخاب کنید', '0');
			defaultOption.setAttribute("disabled", "true");
				defaultOption.setAttribute("selected", "selected");
			aiModelTypes.add(defaultOption, undefined);
			for (const element of AiModelChildern) {
				let newOption = new Option(`${element.Title}`, `${element.Id}`);
				aiModelTypes.add(newOption, undefined);
			}
		}


		const sendMessageBtn = document.getElementById("SendMessageBtn");
		const messageInput = document.getElementById("Message");
		

		const overlay = document.getElementById("chat-overlay");
		const overlayHead = document.getElementById("chat-overlay-head");
		const overlayBody = document.getElementById("chat-overlay-body");
		const chatHead = document.getElementById("chat-head");
		
		var id = 0;
		let username = "123";
		let dateTime = "";
		const chatBackBtn = document.getElementById("chatBackBtn");
		chatBackBtn.addEventListener("click", function(){
			$(overlay).show(300);
		});
		
		
		function chatTrigger(action){
			if(action === "enable"){
				if (sendMessageBtn.disabled) {
					sendMessageBtn.classList.remove("disabled");
					sendMessageBtn.removeAttribute("disabled");
				}
				if (messageInput.disabled) {
					messageInput.removeAttribute("disabled");
				}
			}
			else{
				if (!sendMessageBtn.disabled) {
					sendMessageBtn.classList.add("disabled");
					sendMessageBtn.disabled = true;
				}
				if (!messageInput.disabled) {
					messageInput.value = "";
					messageInput.disabled = true;
				}
			}
		}
		changeAiPlatforms();
		changeAiModels();
		
		

	</script>

}
