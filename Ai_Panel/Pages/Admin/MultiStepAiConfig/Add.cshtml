@page
@model Ai_Panel.Pages.Admin.MultiStepAiConfig.AddModel
@{
    string title = "افزودن تنظیمات جدید هوش مصنوعی";
    ViewData["Title"] = title;
}

<div class="row justify-content-md-center">
    <div class="col-md-12 col-lg-12 col-12">
        <div class="card shadow">
            <h5 class="card-header">@title</h5>
            <div class="card-body">
                <section class="card-text">
                    <div class="row mt-1">
                        <div class="col-lg-8 col-md-8 col-12 mb-2">
                            <div enctype="multipart/form-data">
                                <input type="hidden" asp-for="AiConfigDto.N" />
                                @Html.AntiForgeryToken()
                                @if (!string.IsNullOrEmpty(Model.Error))
                                {
                                    <p class="alert alert-danger">Error</p>
                                }
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                <div class="col-lg-12 col-md-12 col-12 mt-4">
                                    <div class="card shadow-sm">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0">مدل ها</h6>
                                            <button type="button" id="AddAiConfigBtn" class="btn btn-sm btn-success">
                                                افزودن +
                                            </button> 
                                        </div>
                                       
                                        <div class="card-body" id="AiConfigsContainer">
                                            <div class="col-lg-4 col-6 mt-1">
                                                <label>عنوان کانفیگ:</label>
                                                <input type="text" class="form-control" id="config-title">
                                            </div>
                                            <!-- باکس‌های جدید اینجا اضافه می‌شن -->
                                            <div class="border rounded p-3 mb-3 position-relative bg-light ai-config-box" data-index="0">
                                                <button type="button" class="btn position-absolute m-2 remove-config" data-remove="0" onClick="removeAiConfig(0)" style="top:0px;left:0px">
                                                    <i class="fa fa-trash text-danger"></i>
                                                </button>
                                                <div class="row">
                                                    <div class="col-lg-3 col-6 mb-2">
                                                        <label>پلتفرم</label>
                                                        <select class="form-select AiPlatform" name="AiConfigs[0].AiPlatformId" onchange="fillAiTypes(0)" required>
                                                            <option disabled selected>انتخاب کنید</option>
                                                        </select>
                                                    </div>
                                                    <div class="col-lg-3 col-6 mb-2">
                                                        <label>هوش مصنوعی</label>
                                                        <select class="form-select AiType" name="AiConfigs[0].AiTypeId" onchange="fillAiModels(0)" required>
                                                            <option disabled selected>انتخاب کنید</option>
                                                        </select>
                                                    </div>
                                                    <div class="col-lg-3 col-6 mb-2">
                                                        <label>مدل</label>
                                                        <select class="form-select AiModel" name="AiConfigs[0].AiModelId" required>
                                                            <option disabled selected>انتخاب کنید</option>
                                                        </select>
                                                    </div>

                                                    <div class="col-lg-4 col-6 mt-1">
                                                        <label>خلاقیت در پاسخگویی:</label>
                                                        <span id="rangeValue1" class="font-weight-bold ms-2">0</span>
                                                        <input type="range" class="form-range" min="0" max="2" step="0.01" name="AiConfigs[0].Temperature">
                                                    </div>
                                                    <div class="col-lg-4 col-6 mt-1">
                                                        <label>خلاقیت در ساخت جمله:</label>
                                                        <span id="rangeValue2" class="font-weight-bold ms-2">0</span>
                                                        <input type="range" class="form-range" min="-2" max="2" step="0.1" name="AiConfigs[0].PresencePenalty">
                                                    </div>
                                                    <div class="col-lg-4 col-6 mt-1">
                                                        <label>کنترل تنوع پاسخ بر اساس احتمال:</label>
                                                        <span id="rangeValue3" class="font-weight-bold ms-2">0</span>
                                                        <input type="range" class="form-range" min="0" max="1" step="0.01" name="AiConfigs[0].TopP">
                                                    </div>
                                                    <div class="col-lg-4 col-6 mt-1">
                                                        <label>جلوگیری از تکرار کلمه در جمله:</label>
                                                        <span id="rangeValue4" class="font-weight-bold ms-2">0</span>
                                                        <input type="range" class="form-range" min="-2" max="2" step="0.1" name="AiConfigs[0].FrequencyPenalty">
                                                    </div>
                                                    <div class="col-lg-4 col-6">
                                                        <label>بیشترین تعداد کلمات خروجی</label>
                                                        <input type="number" class="form-control" max="10000" min="5" name="AiConfigs[0].MaxTokens">
                                                    </div>
                                                    <div class="col-lg-12 col-12">
                                                        <label>توقف پاسخگویی در کلمات خاص</label>
                                                        <textarea class="form-control" rows="1" name="AiConfigs[0].Stop"></textarea>
                                                    </div>

                                                    <div class="col-lg-12 col-12 mb-2">
                                                        <label>پرامپت</label>
                                                        <textarea class="form-control AiPrompt" name="AiConfigs[0].Prompt" rows="2" placeholder="پرامپت را وارد کنید..." required></textarea>
                                                    </div>
                                                </div>
                                            </div>
                                            @* --------------------------------- *@
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12 col-md-12 col-12 mt-2">
                                    <div class="d-grid gap-2">
                                        <button class="btn btn-primary" type="submit" id="submit-btn">ثبت</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-12">
                            <div class="row box-shadow-1 ">
                                <div id="chat-overlay" class="card-title text-center" style="display:none;">
                                    <div id="chat-overlay-head" class="card-header ui-sortable-handle"></div>
                                    <div id="chat-overlay-body"></div>
                                </div>
                                <div class="col-lg-12 col-6">
                                    <partial name="_GroupChatBox" />
                                </div>
                            </div>
                        </div>
                    </div>
                </section> 
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="validationModal" tabindex="-1" aria-labelledby="validationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="validationModalLabel">خطای اعتبارسنجی</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                برای ثبت اطلاعات باید مقادیر پلتفرم ، هوش مصنوعی و مدل ،پرامپت و متن پیام را وارد نمایید را پر کنید
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">باشه</button>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        // fill drop downs
        const validationModal = new bootstrap.Modal(document.getElementById('validationModal'));
        var parentsData = @Html.Raw(ViewBag.parentAiModels);
        var childsData = @Html.Raw(ViewBag.childAiModels);
        var AiPlatforms = @Html.Raw(ViewBag.AiPlatforms);

        function fillAiPlatforms(index) {
            const select = document.querySelector(`[name="AiConfigs[${index}].AiPlatformId"]`);
            console.log(select)
            select.innerHTML = '';
            const defaultOption = new Option('انتخاب کنید', '');
            defaultOption.disabled = true;
            defaultOption.selected = true;
            select.add(defaultOption);
            AiPlatforms.forEach(p => {
                const opt = new Option(p.Title, p.Id);
                select.add(opt);
            });
        }
        window.fillAiTypes =  function fillAiTypes(index) {
            const platformSelect = document.querySelector(`[name="AiConfigs[${index}].AiPlatformId"]`);
            const typeSelect = document.querySelector(`[name="AiConfigs[${index}].AiTypeId"]`);
            typeSelect.innerHTML = '';
            const defaultOption = new Option('انتخاب کنید', '');
            defaultOption.disabled = true;
            defaultOption.selected = true;
            typeSelect.add(defaultOption);
            if (!platformSelect.value) return;
            const selectedPlatform = Number(platformSelect.value);
            const filtered = parentsData.filter(p => p.PlatformIds.includes(selectedPlatform));
            filtered.forEach(p => typeSelect.add(new Option(p.Title, p.Id)));
            // پاک کردن مدل قبلی
            const modelSelect = document.querySelector(`[name="AiConfigs[${index}].AiModelId"]`);
            modelSelect.innerHTML = '<option disabled selected>انتخاب کنید</option>';
        }

        window.fillAiModels = function fillAiModels(index) {
            const typeSelect = document.querySelector(`[name="AiConfigs[${index}].AiTypeId"]`);
            const modelSelect = document.querySelector(`[name="AiConfigs[${index}].AiModelId"]`);
            modelSelect.innerHTML = '';
            const defaultOption = new Option('انتخاب کنید', '');
            defaultOption.disabled = true;
            defaultOption.selected = true;
            modelSelect.add(defaultOption);
            if (!typeSelect.value) return;
            const selectedType = Number(typeSelect.value);
            const filtered = childsData.filter(c => c.ParentId === selectedType);
            filtered.forEach(c => modelSelect.add(new Option(c.Title, c.Id)));
        }

        let AiConfigIndex = 0;
        const AiConfigsContainer = document.getElementById("AiConfigsContainer");
        const AddAiConfigBtn = document.getElementById("AddAiConfigBtn");
        let aiConfigsArray = [];

        // آپدیت span ها برای range
        function updateRangeDisplay(box) {
            const ranges = box.querySelectorAll('input[type="range"]');
            ranges.forEach((range, i) => {
                const span = box.querySelector(`#rangeValue${i + 1}`);
                if (span) span.textContent = range.value;
            });
        }

        // مقداردهی اولیه span ها
        function initializeRangeValues(box) {
            updateRangeDisplay(box);
        }

        // آپدیت آرایه aiConfigsArray
        function updateAiConfigsArray() {
            aiConfigsArray = [];
            const boxes = document.querySelectorAll('.ai-config-box');
            boxes.forEach(box => {
                const index = box.getAttribute('data-index');
                const obj = {
                    AiPlatformId: box.querySelector(`[name="AiConfigs[${index}].AiPlatformId"]`).value,
                    AiTypeId: box.querySelector(`[name="AiConfigs[${index}].AiTypeId"]`).value,
                    AiModelId: box.querySelector(`[name="AiConfigs[${index}].AiModelId"]`).value,
                    Temperature: box.querySelector(`[name="AiConfigs[${index}].Temperature"]`).value,
                    PresencePenalty: box.querySelector(`[name="AiConfigs[${index}].PresencePenalty"]`).value,
                    TopP: box.querySelector(`[name="AiConfigs[${index}].TopP"]`).value,
                    FrequencyPenalty: box.querySelector(`[name="AiConfigs[${index}].FrequencyPenalty"]`).value,
                    MaxTokens: box.querySelector(`[name="AiConfigs[${index}].MaxTokens"]`).value,
                    Stop: box.querySelector(`[name="AiConfigs[${index}].Stop"]`).value,
                    Prompt: box.querySelector(`[name="AiConfigs[${index}].Prompt"]`).value
                };
                aiConfigsArray.push(obj);
            });
            console.log(aiConfigsArray);
        }

        // اضافه کردن باکس جدید
        AddAiConfigBtn.addEventListener("click", () => {
            AiConfigIndex++;
            const boxHTML = createAiConfigBox(AiConfigIndex);
            AiConfigsContainer.insertAdjacentHTML("beforeend", boxHTML);
            const newBox = AiConfigsContainer.querySelector(`[data-index="${AiConfigIndex}"]`);
            initializeRangeValues(newBox);
            updateAiConfigsArray();
            fillAiPlatforms(AiConfigIndex);
        });

        // حذف باکس
        window.removeAiConfig = function(index) {
            const box = AiConfigsContainer.querySelector(`[data-index="${index}"]`);
            if (box) {
                box.remove();
                updateAiConfigsArray();
            }
        }

        // مدیریت تغییرات range و سایر inputها
        AiConfigsContainer.addEventListener('input', function(e) {
            const box = e.target.closest('.ai-config-box');
            if (!box) return;

            if (e.target.type === 'range') {
                updateRangeDisplay(box);
            }
            updateAiConfigsArray();
        });

        // ساخت HTML باکس
        function createAiConfigBox(index) {
            return `
            <div class="border rounded p-3 mb-3 position-relative bg-light ai-config-box" data-index="${index}">
                <button type="button" class="btn position-absolute m-2 remove-config" data-remove="${index}" onClick="removeAiConfig(${index})" style="top:0px;left:0px">
                    <i class="fa fa-trash text-danger"></i>
                </button>
                <div class="row">
                    <div class="col-lg-3 col-6 mb-2">
                        <label>پلتفرم</label> 
                        <select class="form-select AiPlatform" name="AiConfigs[${index}].AiPlatformId" onchange="fillAiTypes(${index})" required>
                            <option disabled selected>انتخاب کنید</option>
                        </select>
                    </div>
                    <div class="col-lg-3 col-6 mb-2">
                        <label>هوش مصنوعی</label>
                        <select class="form-select AiType" name="AiConfigs[${index}].AiTypeId" onchange="fillAiModels(${index})" required>
                            <option disabled selected>انتخاب کنید</option>
                        </select>
                    </div>
                    <div class="col-lg-3 col-6 mb-2">
                        <label>مدل</label>
                        <select class="form-select AiModel" name="AiConfigs[${index}].AiModelId" required>
                            <option disabled selected>انتخاب کنید</option>
                        </select>
                    </div>

                    <div class="col-lg-4 col-6 mt-1">
                        <label>خلاقیت در پاسخگویی</label>
                        <span id="rangeValue1" class="font-weight-bold ms-2">0</span>
                        <input type="range" class="form-range" min="0" max="2" step="0.01" name="AiConfigs[${index}].Temperature">
                    </div>
                    <div class="col-lg-4 col-6 mt-1">
                        <label>خلاقیت در ساخت جمله</label>
                        <span id="rangeValue2" class="font-weight-bold ms-2">0</span>
                        <input type="range" class="form-range" min="-2" max="2" step="0.1" name="AiConfigs[${index}].PresencePenalty">
                    </div>
                    <div class="col-lg-4 col-6 mt-1">
                        <label>کنترل تنوع پاسخ بر اساس احتمال</label>
                        <span id="rangeValue3" class="font-weight-bold ms-2">0</span>
                        <input type="range" class="form-range" min="0" max="1" step="0.01" name="AiConfigs[${index}].TopP">
                    </div>
                    <div class="col-lg-4 col-6 mt-1">
                        <label>جلوگیری از تکرار کلمه در جمله</label>
                        <span id="rangeValue4" class="font-weight-bold ms-2">0</span>
                        <input type="range" class="form-range" min="-2" max="2" step="0.1" name="AiConfigs[${index}].FrequencyPenalty">
                    </div>
                    <div class="col-lg-4 col-6">
                        <label>بیشترین تعداد کلمات خروجی</label>
                        <input type="number" class="form-control" max="10000" min="5" name="AiConfigs[${index}].MaxTokens">
                    </div>
                    <div class="col-lg-12 col-12">
                        <label>توقف پاسخگویی در کلمات خاص</label>
                        <textarea class="form-control" rows="1" name="AiConfigs[${index}].Stop"></textarea>
                    </div>

                    <div class="col-lg-12 col-12 mb-2">
                        <label>پرامپت</label>
                        <textarea class="form-control AiPrompt" name="AiConfigs[${index}].Prompt" rows="2" placeholder="پرامپت را وارد کنید..." required></textarea>
                    </div>
                </div>
            </div>
            `;
        }

        const initialBox = AiConfigsContainer.querySelector('.ai-config-box');
        fillAiPlatforms(0);
        if(initialBox) initializeRangeValues(initialBox);

        const submitBtn = document.getElementById("submit-btn");
        console.log("submitBtn", submitBtn)
        submitBtn.addEventListener("click" ,()=>{
        // -----------------------------------
        aiConfigsArray = [];
        let boxErrors = [];
            const boxes = document.querySelectorAll('.ai-config-box');
            const configTitle = document.getElementById("config-title").value;
            boxes.forEach(box => {
                const index = box.getAttribute('data-index');
                const obj = {
                    Title: configTitle,
                    AiPlatformId: Number(box.querySelector(`[name="AiConfigs[${index}].AiPlatformId"]`).value),
                    AiTypeId: Number(box.querySelector(`[name="AiConfigs[${index}].AiTypeId"]`).value),
                    AiModelId: Number(box.querySelector(`[name="AiConfigs[${index}].AiModelId"]`).value),
                    Temperature: parseFloat(box.querySelector(`[name="AiConfigs[${index}].Temperature"]`).value),
                    PresencePenalty: parseFloat(box.querySelector(`[name="AiConfigs[${index}].PresencePenalty"]`).value),
                    TopP: parseFloat(box.querySelector(`[name="AiConfigs[${index}].TopP"]`).value),
                    FrequencyPenalty: parseFloat(box.querySelector(`[name="AiConfigs[${index}].FrequencyPenalty"]`).value),
                    MaxTokens: Number(box.querySelector(`[name="AiConfigs[${index}].MaxTokens"]`).value),
                    Stop: box.querySelector(`[name="AiConfigs[${index}].Stop"]`).value.split(","),
                    Prompt: box.querySelector(`[name="AiConfigs[${index}].Prompt"]`).value,
                    AiConfigOrder: index
                };
                
                if (!obj.AiPlatformId) boxErrors.push("پلتفرم");
                if (!obj.AiTypeId) boxErrors.push("هوش مصنوعی");
                if (!obj.AiModelId) boxErrors.push("مدل");
                if (!obj.MaxTokens) boxErrors.push("بیشترین تعداد کلمات خروجی");
                if (!obj.Prompt) boxErrors.push("پرامپت");
                aiConfigsArray.push(obj);
            });

            console.log(aiConfigsArray);
            if(boxErrors.length > 0){
                validationModal.show()
            }
            else{
                fetch('/api/AiConfig/Add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(aiConfigsArray)
                })
                .then(res => res.json())
                .then(res=>{
                    if(res.errorId == 0){
                        ShowToast(status = 'success', message = res.result)
                        window.location.href = "/Admin/MultiStepAiConfig/"
                    }
                    else{
                        ShowToast(status = 'error', message = res.errorTitle)
                    }
                })
                .catch(console.error);
            }
            
        //------------------------------------
    
        })
      

    });
</script>


 