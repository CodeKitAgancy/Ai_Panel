@page
@using Ai_Panel.Application.Tools
@model Ai_Panel.Pages.Admin.TestAiConfigLogs.IndexModel
@{
	ViewData["Title"] = "گزارش تست کانفیگ های هوش مصنوعی";
	Layout = "_AdminLayout";
}
<div class="row">
	<div class="col-md-12">
		<div class="card card-primary card-outline shadow h-100">
			<div class="d-flex card-header">
				<div class="col-lg-10 col-md-4 col-6">
					<h5 class="card-title col-lg-10 col-md-4 col-6">
						<i class="fa fa-bar-chart-o"></i>
						گزارش تست کانفیگ های هوش مصنوعی
					</h5>
				</div>
			</div>

			<div class="card-body">
				<section class="card-text d-none">
					<form enctype="multipart/form-data" method="post" id="TestConfigLogsFilterForm" data-ajax-success="FormSubmitHandler">
						@Html.AntiForgeryToken()
						<div class="row mb-3">
							<div class="col-3 mb-3">
								<label for="TestConfigLogsUserId">ادمین :</label>
								<select class="form-control form-select" asp-items="ViewBag.Admins" name="UserId" id="TestConfigLogsUserId">
									<option value="0" selected>همه</option>
								</select>
							</div>
							<div class="col-3 mb-3">
								<label for="TestConfigLogsBookId">کتاب :</label>
								<select class="form-control form-select" asp-items="ViewBag.Books" name="BookId" id="TestConfigLogsBookSelect" onchange="bookChange()">
									<option value="0" selected>همه</option>
								</select>
							</div>
							<div class="col-3 mb-3">
								<label for="TestConfigLogsPartId">فصل :</label>
								<select class="form-control form-select" name="PartId" id="TestConfigLogsPartSelect">
									<option value="0" selected>همه</option>
								</select>
							</div>
							<div class="col-3 mb-3">
								<label for="TestConfigLogsAiId">هوش مصنوعی :</label>
								<select class="form-control form-select" name="AiId" asp-items="ViewBag.AiTypes" id="TestConfigLogsAiType" asp-items="ViewBag.AiTypes" onchange="changeAiModels()">
									<option value="0" selected>همه</option>
								</select>
							</div>
							<div class="col-3 mb-3">
								<label for="TestConfigLogsAiModelId">مدل هوش مصنوعی :</label>
								<select class="form-control form-select" name="AiModelId" id="TestConfigLogsAiModelTypes">
									<option value="0" selected>همه</option>
								</select>
							</div>
							<input id="TestConfigLogsOrderBy" type="hidden" name="OrderBy">
							<div class="col-lg-12 mb-3">
								<div class="btn-group" role="group" aria-label="Basic example">
									<button type="submit" class="btn btn-primary" title="جستجو" id="TestConfigLogsFilterFormBtn" data-input="TestConfigLogsOrderBy">
										<i class="fa fa-search"></i>
									</button>
									<button class="removeSortBtn btn btn-link" data-input="TestConfigLogsOrderBy">حذف مرتب سازی ها</button>
								</div>
							</div>

						</div>
					</form>
				</section>
				<div class="col-12 mb-3">
					@if (Model.TestAiConfigLogsDto == null || !Model.TestAiConfigLogsDto.Any())
					{
						<div class="alert alert-info">
							<p>رکوردی برای نمایش یافت نشد</p>
						</div>
					}
					else
					{
						<div class="scrolable-table-holder">
							<table class="table table-hover text-center sortable" id="TestAiConfigTable">
								<thead>
									<tr>
										<th>کاربر</th>
										<th>مدل هوش مصنوعی</th>
										<th>تعداد توکن</th>
										<th>پیام</th>
										<th>پرامپت</th>
										<th>Temperature</th>
										<th>TopP</th>
										<th>PresencePenalty</th>
										<th>FrequencyPenalty</th>
										<th>Stop</th>
										<th>هزینه درخواست</th>
										<th>پاسخ هوش مصنوعی</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var item in Model.TestAiConfigLogsDto)
									{
										<tr>
											<td>@(item.User?.FullName ?? "-")</td>
											<td>@(item.AiModel.Title ?? "-")</td>
											<td>@item.MaxTokens</td>
											<td title="@item.Message">
												@(
																						item.Message.Length > 50
																						? item.Message.Substring(0, 50) + "..."
																						: item.Message
																						)
											</td>
											<td title="@item.Prompt">
												@(
																						item.Prompt.Length > 50
																						? item.Prompt.Substring(0, 50) + "..."
																						: item.Prompt
																						)
											</td>
											<td>@item.Temperature</td>
											<td>@item.TopP</td>
											<td>@item.PresencePenalty</td>
											<td>@item.FrequencyPenalty</td>
											<td>@(item.Stop != null ? string.Join(",", item.Stop) : "-")</td>
											<td>@Math.Round(item.RequestCost, 4)</td>
											<td title="@item.AiResponse">
												@(
																						!string.IsNullOrEmpty(item.AiResponse)
																						? (item.AiResponse.Length > 30 ? item.AiResponse.Substring(0, 30) + "..." : item.AiResponse)
																						: "-"
																						)
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					}
				</div>

			</div>
		</div>
	</div>
</div>
@section Scripts
{
	<script>
		loadSorts("TestConfigLogs")
		$("#TestConfigLogsFilterForm").submit(function (event) {
				event.preventDefault();
				let url = '/Admin/TestAiConfigLogs/Index/FilterTestAiConfigLogs';
				let targetId = 'TestConfigLogsHolder';
				StartLoading();
				var formData = new FormData(this);
				$.ajax({
					url: `${url}`,
					type: 'POST',
					data: formData,
					beforeSend: function () {
						StartLoading();
					},
					success: function (response) {
						CloseLoading();
						FormSubmitHandler(response, targetId);
						loadSorts("TestConfigLogs");
					},
					error: function () {
						CloseLoading();
						ShowFailedAlert();
					},
					cache: false,
					contentType: false,
					processData: false
				});
			});
			var bookPartsUrl = "/Admin/BookPart/Index/GetBookParts";
			$('#TestConfigLogsBookId')?.change(function() {
			var bookId = $(this).val();
			if(!StringIsNullOrEmpty(bookId)){
				let data = { bookId: bookId};
				let target = "TestConfigLogsPartId";
				AjaxSelectBoxFilter(bookPartsUrl, data, target, targetChild = null, type = 'GET', defaultValue=false, allOption=true);
			}
			});

		var parentsData = @Html.Raw(ViewBag.childAiModels);
		var aiModelTypes = document.getElementById('TestConfigLogsAiModelTypes');
		function changeAiModels() {
			var selectedAi = Number($('#TestConfigLogsAiType').val());
			const AiModelChildern = parentsData.filter(item => item.ParentId === selectedAi);
			let options = aiModelTypes.getElementsByTagName('option');
			for (var i = options.length; i--;) {
				aiModelTypes.removeChild(options[i]);
			}
			let defaultOption = new Option('لطفا موردی را انتخاب کنید', '0');
			defaultOption.setAttribute("disabled", "true");
			defaultOption.setAttribute("selected", "selected");
			aiModelTypes.add(defaultOption, undefined);
			for (const element of AiModelChildern) {
				let newOption = new Option(`${element.Title}`, `${element.Id}`);
				aiModelTypes.add(newOption, undefined);
			}
		}

		var bookParts = @Html.Raw(ViewBag.BookParts);
		var bookPartsSelectBox = document.getElementById('TestConfigLogsPartSelect');
		function bookChange() {
			var selectedBook = Number($('#TestConfigLogsBookSelect').val());
			const bookPartsChildern = bookParts.filter(item => item.BookId === selectedBook);
			let options = bookPartsSelectBox.getElementsByTagName('option');
			for (var i = options.length; i--;) {
				bookPartsSelectBox.removeChild(options[i]);
			}
			let defaultOption = new Option('لطفا موردی را انتخاب کنید', '0');
			defaultOption.setAttribute("disabled", "true");
			defaultOption.setAttribute("selected", "selected");
			bookPartsSelectBox.add(defaultOption, undefined);
			for (const element of bookPartsChildern) {
				let newOption = new Option(`${element.Title}`, `${element.Id}`);
				bookPartsSelectBox.add(newOption, undefined);
			}
		}
	</script>
}