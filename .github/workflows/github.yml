name: Deploy to Server

on:
  push:
    branches: ["pipe","main"]

permissions:
  contents: read
  packages: write

env:
  APP_NAME: ${{ vars.DEPLOY_DIR }}
  IMAGE_NAME: "ghcr.io/${{ secrets.GIT_DOCKER_USER }}/${{ vars.PRODUCT_NAME_LOWER }}"
  SRC_DIRECTORY: "./${{ vars.SRC_DIRECTORY }}" # Should be line project/ or ./
  BRANCH_NAME: 'refs/heads/main'
  # ENV_PATH: '.env'
  # ENV_SECRET: ${{ secrets.PRODUCTION_ENV }}
  GIT_USER: ${{ secrets.GIT_DOCKER_USER }}
  GIT_TOKEN: ${{ secrets.GIT_DOCKER_TOKEN }}
  SERVER_KEY: ${{ secrets.SERVER_KEY }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_PORT: ${{ secrets.SERVER_PORT }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ env.GIT_USER }}
        password: ${{ env.GIT_TOKEN }}

    # - name: Set .env file
    #   if: github.ref == ${{ env.BRANCH_NAME }}
    #   uses: 1arp/create-a-file-action@0.4.5
    #   with:
    #     file: ${{ env.SRC_DIRECTORY }}/${{ env.ENV_PATH }}
    #     content: ${{ env.ENV_SECRET }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.SRC_DIRECTORY }}
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: update my docker file
      run: |
        sed -i '/image:.*$/ s|image:.*|image: ${{ env.IMAGE_NAME }}|' docker-compose.yml


    # - name: Set .env file
    #   if: github.ref == ${{ env.BRANCH_NAME }}
    #   uses: 1arp/create-a-file-action@0.4.5
    #   with:
    #     file: ${{ env.SRC_DIRECTORY }}${{ env.ENV_PATH }}
    #     content: ${{ env.ENV_SECRET }}


    - name: ssh pull image and deploy
      uses: easingthemes/ssh-deploy@v5.1.0
      with:
        SSH_PRIVATE_KEY: ${{ env.SERVER_KEY }}
        REMOTE_HOST: ${{ env.SERVER_IP }}
        REMOTE_USER: ${{ env.SERVER_USER }}
        REMOTE_PORT: ${{ env.SERVER_PORT }}
        # SCRIPT_BEFORE: mkdir -p ${{ env.APP_NAME }}
        SOURCE: ./docker-compose.yml
        TARGET: "./${{ env.APP_NAME }}/."
        SCRIPT_AFTER_REQUIRED: true
        SCRIPT_AFTER: |
            set -euo pipefail
            cd ${{ env.APP_NAME }}
            echo ${{ env.GIT_TOKEN }} | docker login ghcr.io -u ${{ env.GIT_USER }}  --password-stdin
            docker compose pull
            docker compose down
            docker compose up -d

